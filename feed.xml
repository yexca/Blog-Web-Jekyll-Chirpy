

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://blog.yexca.net/</id>
  <title>yexca'Blog</title>
  <subtitle>yexca,blog,技术,博客,技术博客</subtitle>
  <updated>2024-02-23T16:47:07+08:00</updated>
  <author>
    <name>yexca</name>
    <uri>https://blog.yexca.net/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://blog.yexca.net/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh"
    href="https://blog.yexca.net/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2024 yexca </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Redis</title>
    <link href="https://blog.yexca.net/archives/157" rel="alternate" type="text/html" title="Redis" />
    <published>2024-02-23T16:40:00+08:00</published>
  
    <updated>2024-02-23T16:40:00+08:00</updated>
  
    <id>https://blog.yexca.net/archives/157</id>
    <content src="https://blog.yexca.net/archives/157" />
    <author>
      <name>yexca</name>
    </author>

  
    
    <category term="后端" />
    
    <category term="Redis" />
    
  

  
    <summary>
      





      Redis 是一个基于内存的 key-value 结构数据库，是互联网技术领域使用最为广泛的存储中间件


  官网：https://redis.io
  中文网：https://www.redis.net.cn/


Redis 基于内存存储，读写性能高，适合存储热点数据 (商品、资讯、新闻) 。是用 C 语言开发的一个开源的高性能键值对数据库，存储 value 类型比较丰富，也被称为结构化的 NoSql (Not Only SQL) 数据库

NoSql 泛指非关系型数据库，并不是要取代关系型数据库，而是关系型数据库的补充

关系型数据库 (RDBMS)：


  MySQL
  Oracle
  DB2
  SQLServer


非关系型数据库 (NoSQL)：


  Redis
  Mongo DB
  MemCached


Redis 下载安装与运行

下载地址：

...
    </summary>
  

  </entry>

  
  <entry>
    <title>GoLand 函数</title>
    <link href="https://blog.yexca.net/archives/156" rel="alternate" type="text/html" title="GoLand 函数" />
    <published>2024-02-22T04:47:00+08:00</published>
  
    <updated>2024-02-22T04:47:00+08:00</updated>
  
    <id>https://blog.yexca.net/archives/156</id>
    <content src="https://blog.yexca.net/archives/156" />
    <author>
      <name>yexca</name>
    </author>

  
    
    <category term="编程基础" />
    
    <category term="编程语言" />
    
  

  
    <summary>
      





      多返回值

Go 函数可以返回多个值

匿名返回

package main

import "fmt"

func swap(a, b int) (int, int) {
	return b, a
}

func main() {
	var x, y = swap(10, 20)
	fmt.Println(x, y)
}

/* 输出
 * 20 10
 */


有形参名返回

package main

import "fmt"

func swap(a, b int) (x int, y int) {
	x = b
	y = a
	return
}

func main() {
	var x, y = swap(10, 20)
	fmt.Println(x, y)
}


上述返回值类型相同，可以合并

package main

import "fmt"

func swa...
    </summary>
  

  </entry>

  
  <entry>
    <title>GoLand 变量与常量</title>
    <link href="https://blog.yexca.net/archives/155" rel="alternate" type="text/html" title="GoLand 变量与常量" />
    <published>2024-02-20T06:41:00+08:00</published>
  
    <updated>2024-02-20T06:41:00+08:00</updated>
  
    <id>https://blog.yexca.net/archives/155</id>
    <content src="https://blog.yexca.net/archives/155" />
    <author>
      <name>yexca</name>
    </author>

  
    
    <category term="编程基础" />
    
    <category term="编程语言" />
    
  

  
    <summary>
      





      变量

声明变量一般使用 var 关键字

单变量


  定义类型


不指定初始值的声明，默认为 0

package main

import "fmt"

func main() {
	var a int
	fmt.Println("a =", a)
}


指定初始值，a 为 100

package main

import "fmt"

func main() {
	var a int = 100
	fmt.Println("a =", a)
}



  省略类型


在声明时不知道类型的话，Go 会自动判断变量类型

package main

import (
	"fmt"
	"reflect"
)

func main() {
	var a = 100
	fmt.Println("a =", a)
	fmt.Printf("Type of a = %s", re...
    </summary>
  

  </entry>

  
  <entry>
    <title>Hello GoLand</title>
    <link href="https://blog.yexca.net/archives/154" rel="alternate" type="text/html" title="Hello GoLand" />
    <published>2024-02-19T07:58:00+08:00</published>
  
    <updated>2024-02-19T07:58:00+08:00</updated>
  
    <id>https://blog.yexca.net/archives/154</id>
    <content src="https://blog.yexca.net/archives/154" />
    <author>
      <name>yexca</name>
    </author>

  
    
    <category term="编程基础" />
    
    <category term="编程语言" />
    
  

  
    <summary>
      





      Go 下载：https://go.dev/dl/

JetBrains GoLand：https://www.jetbrains.com/go/

Go 简介

Go 可以直接编译，直接运行即可部署，静态类型语言

# 直接运行
go run hello.go

# 编译
go build hello.go
# 编译后运行
./hello


Go 的一些应用

(1)、云计算基础设施领域

代表项目：docker、kubernetes、etcd、consul、cloudflare CDN、七牛云存储等

(2)、基础后端软件

代表项目：tidb、influxdb、cockroachdb 等

(3)、微服务

代表项目：go-kit、micro、monzo bank的typhon、bilibili 等

(4)、互联网基础设施

代表项目：以太坊、hyperledger 等

H...
    </summary>
  

  </entry>

  
  <entry>
    <title>CentOS 7 安装 Xfce</title>
    <link href="https://blog.yexca.net/archives/153" rel="alternate" type="text/html" title="CentOS 7 安装 Xfce" />
    <published>2024-02-17T22:51:00+08:00</published>
  
    <updated>2024-02-20T07:26:43+08:00</updated>
  
    <id>https://blog.yexca.net/archives/153</id>
    <content src="https://blog.yexca.net/archives/153" />
    <author>
      <name>yexca</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="LinuxTools" />
    
  

  
    <summary>
      





      这是什么时候写的文章啊（

查看是否有 Xfce 组

yum grouplist


如果没有，需要安装额外包 yum 源

yum install epel-release -y


安装 X Window system

yum groupinstall "X Window system"


安装 Xfce

yum groupinstall xfce


安装中文字体 (楷体)

yum install cjkuni-ukai-fonts


进入 Xfce 桌面

systemctl isolate graphical.target


参考文章

CentOS 7安装Xfce桌面环境过程_qq_28641401的博客-CSDN博客

    </summary>
  

  </entry>

</feed>


